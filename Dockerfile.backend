# Backend Dockerfile
FROM node:18-alpine as build

WORKDIR /app

# Copy backend package files
COPY package-backend.json package.json
COPY package-lock.json* ./

# Install dependencies
RUN npm ci --only=production

# Copy backend source code
COPY src/ ./src/
COPY tsconfig-backend.json tsconfig.json

# Install TypeScript and build
RUN npm install -g typescript ts-node
RUN npm run build

# Production stage
FROM node:18-alpine

WORKDIR /app

# Copy package files and install production dependencies
COPY package-backend.json package.json
RUN npm ci --only=production && npm cache clean --force

# Copy built application
COPY --from=build /app/dist ./dist

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001
USER nodejs

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Start the application
CMD ["npm", "start"]